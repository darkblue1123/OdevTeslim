@* MVC Projesi - Views/Courses/MyCourses.cshtml *@
@{
    ViewData["Title"] = "Kayıtlı Olduğum Kurslar";
}

@* ... (Sayfanızın mevcut HTML yapısı aynı kalabilir) ... *@
<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>@ViewData["Title"]</h3>
    </div>

    <div id="myCoursesCard" class="card" style="display:none;">
        <div class="card-body">
            <div id="myCoursesListContainer" class="table-responsive" style="display: none;">
                <table class="table table-striped table-hover" id="tbMyCoursesList">
                    <thead class="thead-light">
                        <tr>
                            <th>Kurs Adı</th>
                            <th>Açıklama</th>
                            <th>Öğretmen</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <p id="noMyCoursesMessage" style="display: none;" class="text-center mt-3">Henüz hiçbir kursa kayıtlı değilsiniz.</p>
            <p id="myCoursesLoadingMessage" class="text-center mt-3">Kurslarınız yükleniyor...</p>
        </div>
    </div>
    <div id="myCoursesErrorMessage" class="alert alert-danger mt-3" style="display: none;"></div>
</div>


@section Scripts {
    <script>
        // GetCurrentUserRolesFromToken fonksiyonu token'dan rolleri çeker.
        // Bu fonksiyonun doğru çalıştığından ve token'ınızda rollerin "Uye" olarak bulunduğundan emin olun.
        function GetCurrentUserRolesFromToken() {
            var token = localStorage.getItem("token");
            if (!token) return [];
            try {
                var payload = JSON.parse(atob(token.split('.')[1]));
                var rolesClaim = payload.role || payload.roles || payload['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];
                if (rolesClaim) {
                    return Array.isArray(rolesClaim) ? rolesClaim : [rolesClaim.toString()];
                }
                return [];
            } catch (e) { console.error("Token parse error for User Roles:", e); return []; }
        }

        $(document).ready(function () {
            var apiBaseUrl = "@Html.Raw(ViewBag.ApiBaseUrl)";
            var token = localStorage.getItem("token");
            var userRoles = GetCurrentUserRolesFromToken(); // Rolleri token'dan al

            $("#myCoursesLoadingMessage").show();
            console.log("MyCourses.cshtml - Alınan Kullanıcı Rolleri:", userRoles);

            if (!token) {
                $("#myCoursesLoadingMessage").hide();
                $("#myCoursesErrorMessage").text("Bu sayfayı görüntülemek için lütfen giriş yapın.").show();
                // setTimeout(function() { window.location.href = "/Account/Login"; }, 2000); // Opsiyonel
                return;
            }

            // ----- ROL KONTROLÜ "Uye" OLARAK GÜNCELLENDİ -----
            var isUye = userRoles.includes("Uye");
            console.log("MyCourses.cshtml - Kullanıcı 'Uye' rolünde mi?:", isUye);

            if (!isUye) { // Eğer "Uye" rolünde değilse
                $("#myCoursesLoadingMessage").hide();
                $("#myCoursesErrorMessage").text("Bu sayfayı yalnızca üyeler (öğrenciler) görüntüleyebilir.").show();
                // Anasayfaya veya başka bir uygun sayfaya yönlendirilebilir
                // setTimeout(function() { window.location.href = "/Home/Index"; }, 2000);
                return;
            }

            // Token var ve rol "Uye" ise kursları yükle
            $("#myCoursesErrorMessage").hide();
            LoadMyCourses();

            function LoadMyCourses() {
                $.ajax({
                    url: `${apiBaseUrl}/courses/my`, // API'deki bu endpoint'in [Authorize(Roles = "Uye")] olması lazım
                    type: "GET",
                    headers: { "Authorization": "Bearer " + token },
                    success: function (coursesData) {
                        $("#myCoursesLoadingMessage").hide();
                        $("#myCoursesCard").show();
                        var $coursesTableBody = $("#tbMyCoursesList tbody");
                        $coursesTableBody.empty();

                        if (coursesData && Array.isArray(coursesData) && coursesData.length > 0) {
                            $.each(coursesData, function (index, course) {
                                   var teacherDisplay = course.teacherName || 'Belirtilmemiş';

        var actionButtons =
            //`<a class="btn btn-sm btn-primary mr-1" href="/Courses/Details/${course.id}" title="Kurs Detaylarını Gör"><i class="fa fa-eye"></i> Detaylar</a> ` +
            `<a class="btn btn-sm btn-info" href="/Student/CourseAssignmentsPage/${course.id}" title="Kursa Ait Ödevleri Gör ve Teslim Et"><i class="fa fa-clipboard-list"></i> Ödevler</a>`; // <<< DEĞİŞİKLİK BURADA: href güncellendi

        var row = `<tr>
            <td>${course.name || 'N/A'}</td>
            <td>${course.description || ''}</td>
            <td>${teacherDisplay}</td>
            <td>${actionButtons}</td>
        </tr>`;

                                $coursesTableBody.append(row);
                            });
                            $("#myCoursesListContainer").show();
                            $("#noMyCoursesMessage").hide();
                        } else {
                            $("#noMyCoursesMessage").show();
                            $("#myCoursesListContainer").hide();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $("#myCoursesLoadingMessage").hide();
                        $("#myCoursesCard").show();
                        console.error("Kayıtlı kurslar alınırken hata:", jqXHR.status, jqXHR.responseText);
                        var errorMessage = "Kayıtlı kurslarınız yüklenirken bir sorun oluştu.";
                        if (jqXHR.status === 401) { // Yetkisiz (Token yok veya geçersiz)
                            errorMessage = "Lütfen giriş yapın.";
                        } else if (jqXHR.status === 403) { // Yasak (Token var ama role yetmiyor)
                            errorMessage = "Bu kursları görme yetkiniz bulunmamaktadır.";
                        } else if (jqXHR.responseJSON && jqXHR.responseJSON.message) {
                            errorMessage = jqXHR.responseJSON.message;
                        }
                        $("#myCoursesListContainer").hide();
                        $("#noMyCoursesMessage").hide();
                        $("#myCoursesErrorMessage").text(errorMessage).show();
                    }
                });
            }
        });
    </script>
}